normal_area(mean=70,sd=3,ub=64)
text(70, 0.012, paste(porcentaje_3_e * 100,'%'))
cat(floor(resultado_3_e),"estudiantes pesan 64 kg o menos")
normal_area(mean=70,sd=3,ub=64)
text(69, 0.012, paste(porcentaje_3_e * 100,'%'))
ejercicio_4_a = 1 - pnorm(72,mean=78,sd=36)
cat("La probabilidad de que una persona obtenga calificacion superior a 72 es de",round(ejercicio_4_a * 100,2),"%")
normal_area(mean=78,sd=36,ub=64)
normal_area(mean=78,sd=36,lb=64)
text(69, 0.012, paste(porcentaje_3_e * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(69, 0.012, paste(porcentaje_3_e * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(69, 0.012, paste(ejercicio_4_a * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(60, 0.012, paste(ejercicio_4_a * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(60, 0.02, paste(ejercicio_4_a * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(50, 0.012, paste(ejercicio_4_a * 100,'%'))
ejercicio_4_a = 1 - pnorm(72,mean=78,sd=36)
cat("La probabilidad de que una persona obtenga calificacion superior a 72 es de",round(ejercicio_4_a * 100,2),"%")
normal_area(mean=78,sd=36,lb=64)
text(50, 0.012, paste(ejercicio_4_a * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(60, 0.012, paste(ejercicio_4_a * 100,'%'))
text(60, 0.0012, paste(ejercicio_4_a * 100,'%'))
text(64, 0.0012, paste(ejercicio_4_a * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(75, 0.0012, paste(ejercicio_4_a * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(100, 0.0012, paste(ejercicio_4_a * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(100, 0.007, paste(ejercicio_4_a * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(100, 0.0004, paste(ejercicio_4_a * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(120, 0.0004, paste(ejercicio_4_a * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(115, 0.0004, paste(ejercicio_4_a * 100,'%'))
ejercicio_4_a = 1 - pnorm(72,mean=78,sd=36)
cat("La probabilidad de que una persona obtenga calificacion superior a 72 es de",round(ejercicio_4_a * 100,2),"%")
normal_area(mean=78,sd=36,lb=64)
text(115, 0.0004, paste(ejercicio_4_a * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(115, 0.004, paste(resultado_4_b * 100,'%'))
ejercicio_4_b = qnorm(.25,mean=78,sd=36) # Calculo la nota por encima del 25% de las notas mas bajas
resultado_4_b = 1 - pnorm(ejercicio_4_b + 5,mean=78,sd=36)
cat("El",resultado_4_b*100,"% de los estudiantes tienen puntuaciones que exceden por lo menos en
5 puntos a la puntuación que marca la frontera entre el apto y el no apto.")
normal_area(mean=78,sd=36,lb=64)
text(115, 0.004, paste(resultado_4_b * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(115, 0.0001, paste(resultado_4_b * 100,'%'))
normal_area(mean=78,sd=36,lb=64)
text(115, 0.0005, paste(resultado_4_b * 100,'%'))
ejercicio_4_b = qnorm(.25,mean=78,sd=36) # Calculo la nota por encima del 25% de las notas mas bajas
ejercicio_4_b
ejercicio_4_b = qnorm(.25,mean=78,sd=36) # Calculo la nota por encima del 25% de las notas mas bajas
ejercicio_4_b
resultado_4_b = 1 - pnorm(ejercicio_4_b + 5,mean=78,sd=36)
cat("El",resultado_4_b*100,"% de los estudiantes tienen puntuaciones que exceden por lo menos en
5 puntos a la puntuación que marca la frontera entre el apto y el no apto.")
normal_area(mean=78,sd=36,lb=ejercicio_4_b)
text(115, 0.0005, paste(resultado_4_b * 100,'%'))
normal_area(mean=78,sd=36,lb=resultado_4_b)
normal_area(mean=78,sd=36,lb=resultado_4_b)
text(115, 0.0005, paste(resultado_4_b * 100,'%'))
resultado_4_b
normal_area(mean=78,sd=36,lb=ejercicio_4_b)
text(115, 0.0005, paste(resultado_4_b * 100,'%'))
prob_84 = 1- pnorm(84,mean=78,sd=36) #probabilidad de que sea mayor a 84
prob_84
ejercicio_4_c = ejercicio_4_a * prob_84 /ejercicio_4_a # probabilidad condicionada
cat("La probabilidad de que sea superior a 84 siendo que ya es mayor de 72 es de",ejercicio_4_c * 100,"%")
normal_area(mean=78,sd=36,lb=82)
text(115, 0.0005, paste(ejercicio_4_c * 100,'%'))
cat("La probabilidad de que sea superior a 84 siendo que ya es mayor de 72 es de",ejercicio_4_c * 100,"%")
source("~/ITEC/BUCCIARELLI-PR06.R", echo=TRUE)
resultado_4_b
normal_area(mean=78,sd=36,lb=ejercicio_4_b + 5)
text(115, 0.0005, paste(resultado_4_b * 100,'%'))
puntuaciones = c(15, 20, 15, 18, 22, 13, 13, 16, 15, 19, 18, 15, 16, 20, 16, 15, 18, 16, 14, 13)
#A
cat("Tabla de frecuencias absolutas ejercicio 1")
tabla_1 = table(puntuaciones) #Genero la tabla de frecuencias absolutas
tabla_1
cat("Tabla de frecuencias relativas ejercicio 1")
prop.table(tabla_1) # Genero la tabla de frecuencias relativas
#B
cat("Poligono de frecuencias ejercicio 1")
puntuacionesTabla1 <- c(12,as.numeric(names(tabla_1)),23) # Inserto los datos de la tabla en dos variables, para armar un dataframe
frecuenciasTabla1 <- c(0,as.numeric(tabla_1),0)
dataframePuntuaciones= data.frame(puntuacionesTabla1=puntuacionesTabla1,frecuenciasTabla1=frecuenciasTabla1)
ggplot(dataframePuntuaciones, aes(x = puntuacionesTabla1, y = frecuenciasTabla1)) +  # Funcion ggplot() genera el poligono de freq.
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Puntuaciones") +
ylab("Frecuencias") +
scale_x_continuous(limits = c(10, 24), breaks = seq(10, 24, by = 1)) +
scale_y_continuous(limits = c(0, 6), breaks = seq(0, 6, by = 1))
library(ggplot2)
options(echo=FALSE)
separador <- function() {
cat("----------------------------------------------------------------------------------------------------\n")
cat("\n")
}
puntuaciones = c(15, 20, 15, 18, 22, 13, 13, 16, 15, 19, 18, 15, 16, 20, 16, 15, 18, 16, 14, 13)
#A
cat("Tabla de frecuencias absolutas ejercicio 1")
tabla_1 = table(puntuaciones) #Genero la tabla de frecuencias absolutas
tabla_1
cat("Tabla de frecuencias relativas ejercicio 1")
prop.table(tabla_1) # Genero la tabla de frecuencias relativas
#B
cat("Poligono de frecuencias ejercicio 1")
puntuacionesTabla1 <- c(12,as.numeric(names(tabla_1)),23) # Inserto los datos de la tabla en dos variables, para armar un dataframe
frecuenciasTabla1 <- c(0,as.numeric(tabla_1),0)
dataframePuntuaciones= data.frame(puntuacionesTabla1=puntuacionesTabla1,frecuenciasTabla1=frecuenciasTabla1)
ggplot(dataframePuntuaciones, aes(x = puntuacionesTabla1, y = frecuenciasTabla1)) +  # Funcion ggplot() genera el poligono de freq.
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Puntuaciones") +
ylab("Frecuencias") +
scale_x_continuous(limits = c(10, 24), breaks = seq(10, 24, by = 1)) +
scale_y_continuous(limits = c(0, 6), breaks = seq(0, 6, by = 1))
summary_db <- summary(sustainable_energy_db)
library(ggplot2)
sustainable_energy_db <- read.csv("sustainable_energy_argentina.csv")
summary_db <- summary(sustainable_energy_db)
library(ggplot2)
sustainable_energy_db <- read.csv("sustainable_energy_argentina.csv")
summary_db <- summary(sustainable_energy_db)
library(ggplot2)
sustainable_energy_db <- read.csv("sustainable_energy_argentina.csv")
getwd()
setwd("ITEC/Matematica Aplicada/efi")
sustainable_energy_db <- read.csv("sustainable_energy_argentina.csv")
summary_db <- summary(sustainable_energy_db)
plot(x=sustainable_energy_db$TIME,y=sustainable_energy_db$REN.ELECTRICITY.OUTPUT)
sustainable_energy_db
var = sustainable_energy_db$TIME
var1 = sustainable_energy_db$REN.ELECTRICITY.OUTPUT
var
var1
df <- data.frame(var,var1)
df
hist(df)
plot(df)
ggplot(df,aes(x=var,y=var1)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable")
var = c(0,sustainable_energy_db$TIME)
var1 = c(sustainable_energy_db$REN.ELECTRICITY.OUTPUT,2016)
var
var1
df <- data.frame(var= var,var1=var1)
df
ggplot(df,aes(x=var,y=var1)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable")
sustainable_energy_db
var = c(1989,sustainable_energy_db$TIME)
var1 = c(sustainable_energy_db$REN.ELECTRICITY.OUTPUT,2016)
var
var1
df <- data.frame(var= var,var1=var1)
df
ggplot(df,aes(x=var,y=var1)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable")
sustainable_energy_db
var = c(1989,sustainable_energy_db$TIME)
var1 = c(sustainable_energy_db$REN.ELECTRICITY.OUTPUT)
var
var1
df <- data.frame(var= var,var1=var1)
df
ggplot(df,aes(x=var,y=var1)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable")
library(ggplot2)
summary_db <- summary(sustainable_energy_db)
sustainable_energy_db
var = c(1989,sustainable_energy_db$TIME)
var1 = c(sustainable_energy_db$REN.ELECTRICITY.OUTPUT)
var
var1
df <- data.frame(var= var,var1=var1)
var = c(sustainable_energy_db$TIME)
var1 = c(sustainable_energy_db$REN.ELECTRICITY.OUTPUT)
var
var1
df <- data.frame(var= var,var1=var1)
df
ggplot(df,aes(x=var,y=var1)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable")
var = c(1989,sustainable_energy_db$TIME)
var1 = c(sustainable_energy_db$REN.ELECTRICITY.OUTPUT,15000)
var
var1
df <- data.frame(var= var,var1=var1)
df
ggplot(df,aes(x=var,y=var1)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable")
var = c(sustainable_energy_db$TIME,anio_prediccion)
var1 = c(sustainable_energy_db$REN.ELECTRICITY.OUTPUT,salida_electricidad_renovable)
var
separador <- function(arg) {
cat(paste("-------",arg,"-------\n"))
cat("\n")
}
anio_prediccion = 2030  # Modificar este valor para obtener distintos resultados.
# ----------------------------Modelo de Predicción para la Salida de Electricidad Renovable por año en Argentina (GWh)------------------
separador("Modelo de Predicción para la Salida de Electricidad Renovable por año en Argentina (GWh)")
regresion_salida_elec_renovable <- lm( REN.ELECTRICITY.OUTPUT ~ TIME  + TOTAL.ELECTRICITY.OUTPUT +  PRIMARY.ENERGY.INTENSITY +
+ RE.CONSUMPTION  + TOTAL.FINAL.ENERGY.CONSUM, data=sustainable_energy_db)
summary(regresion_salida_elec_renovable)
regresion_salida_elec_renovable_ajustado <- lm( REN.ELECTRICITY.OUTPUT ~ TIME
, data=sustainable_energy_db)
summary(regresion_salida_elec_renovable_ajustado)
datos_prediccion_salida_elec_renovable_ajustado <- data.frame(TIME=anio_prediccion)
salida_electricidad_renovable = as.double(predict(regresion_salida_elec_renovable_ajustado, datos_prediccion_salida_elec_renovable_ajustado))
salida_electricidad_renovable
var = c(sustainable_energy_db$TIME,anio_prediccion)
var1 = c(sustainable_energy_db$REN.ELECTRICITY.OUTPUT,salida_electricidad_renovable)
var
var1
df <- data.frame(var= var,var1=var1)
df
ggplot(df,aes(x=var,y=var1)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable")
df <- table(var= var,var1=var1)
df
df <- data.frame(var= var,var1=var1)
df
barplot(df)
df <- matrix(var= var,var1=var1)
df <- table(var= var,var1=var1)
df
df <- table(var,var1)
df
df <- data.frame(var= var,var1=var1)
as.table(df)
df <- data.frame(var= var,var1=var1)
table(df$var,df$var1)
df <- data.frame(var= var,var1=var1)
barplot(df)
df <- data.frame(var= var,var1=var1)
ggplot(df, aes(x=var,y=var1)) + geom_bar(stat="identity");
var = c(sustainable_energy_db$TIME,anio_prediccion)
var1 = c(sustainable_energy_db$REN.ELECTRICITY.OUTPUT,salida_electricidad_renovable)
var
var1
df <- data.frame(var= var,var1=var1)
df
ggplot(df,aes(x=var,y=var1)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable")
regresion_salida_elec_renovable <- lm( REN.ELECTRICITY.OUTPUT ~ TIME  + TOTAL.ELECTRICITY.OUTPUT +  PRIMARY.ENERGY.INTENSITY +
+ RE.CONSUMPTION  + TOTAL.FINAL.ENERGY.CONSUM, data=sustainable_energy_db)
summary(regresion_salida_elec_renovable)
regresion_salida_elec_renovable_ajustado <- lm( REN.ELECTRICITY.OUTPUT ~ TIME
, data=sustainable_energy_db)
summary(regresion_salida_elec_renovable_ajustado)
datos_prediccion_salida_elec_renovable_ajustado <- data.frame(TIME=anio_prediccion)
salida_electricidad_renovable = as.double(predict(regresion_salida_elec_renovable_ajustado, datos_prediccion_salida_elec_renovable_ajustado))
salida_electricidad_renovable
anios = c(sustainable_energy_db$TIME,anio_prediccion)
elec_renov = c(sustainable_energy_db$REN.ELECTRICITY.OUTPUT,salida_electricidad_renovable)
df <- data.frame(anios= anios,elec_renov=elec_renov)
ggplot(df,aes(x=anios,y=elec_renov)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable")
# ---------------------------- Modelo de Predicción para el Consumo de Energia Renovable por año en Argentina (Terajoule-TJ)----------------------------------
separador("Modelo de Predicción para el Consumo de Energia Renovable por año en Argentina (Terajoule-TJ)")
regresion_consumo_ER_energy <- lm( RE.CONSUMPTION ~ TIME  + TOTAL.ELECTRICITY.OUTPUT +  PRIMARY.ENERGY.INTENSITY +
+ REN.ELECTRICITY.OUTPUT  + TOTAL.FINAL.ENERGY.CONSUM, data=sustainable_energy_db)
summary(regresion_consumo_ER_energy)
regresion_consumo_ER_ajustado <- lm( RE.CONSUMPTION ~ REN.ELECTRICITY.OUTPUT + TIME, data=sustainable_energy_db)
summary(regresion_consumo_ER_ajustado)
datos_prediccion_consumo_ER <- data.frame(TIME=anio_prediccion,REN.ELECTRICITY.OUTPUT=salida_electricidad_renovable)
cons_energia_renovable = as.double(predict(regresion_consumo_ER_ajustado, datos_prediccion_consumo_ER))
cons_energia_renovable
re_consum = c(sustainable_energy_db$RE.CONSUMPTION,cons_energia_renovable)
df <- data.frame(anios= anios,re_consum=re_consum)
ggplot(df,aes(x=anios,y=re_consum)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Consumo de Energía Renovable")
# ---------------------------- Modelo de Predicción para la Salida Total de Electricidad por año en Argentina (GWh) ------------------------------------------------
separador("Modelo de Predicción para la Salida Total de Electricidad por año en Argentina (GWh)")
regresion_salida_elec_total<- lm(TOTAL.ELECTRICITY.OUTPUT ~ TIME  + REN.ELECTRICITY.OUTPUT +  PRIMARY.ENERGY.INTENSITY +
RE.CONSUMPTION +  + TOTAL.FINAL.ENERGY.CONSUM, data=sustainable_energy_db)
summary(regresion_salida_elec_total)
regresion_salida_elec_total_ajustado <- lm(TOTAL.ELECTRICITY.OUTPUT ~ TIME + RE.CONSUMPTION, data=sustainable_energy_db)
summary(regresion_salida_elec_total_ajustado)
datos_prediccion_salida_elec_total <- data.frame(TIME=anio_prediccion,RE.CONSUMPTION=cons_energia_renovable)
salida_total_electricidad = as.double(predict(regresion_salida_elec_total_ajustado, datos_prediccion_salida_elec_total))
salida_total_electricidad
total_elec = c(sustainable_energy_db$TOTAL.ELECTRICITY.OUTPUT,salida_total_electricidad)
df <- data.frame(anios= anios,total_elec=total_elec)
ggplot(df,aes(x=anios,y=total_elec)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida Total de Electricidad")
# ---------------------------- Modelo de Predicción para el Total Final de Consumo de Energia por año en Argentina (Terajoules - TJ) ------------------------------------------------------
separador("Modelo de Predicción para el Total Final de Consumo de Energia por año en Argentina (Terajoules - TJ)")
regresion_total_cons_energia <- lm(TOTAL.FINAL.ENERGY.CONSUM ~ TIME + PRIMARY.ENERGY.INTENSITY +  REN.ELECTRICITY.OUTPUT +  TOTAL.ELECTRICITY.OUTPUT +
RE.CONSUMPTION , data=sustainable_energy_db)
summary(regresion_total_cons_energia)
regresion_total_cons_energia_ajustado <- lm(TOTAL.FINAL.ENERGY.CONSUM ~ TIME, data=sustainable_energy_db)
summary(regresion_total_cons_energia_ajustado)
datos_prediccion_total_cons_energia <- data.frame(TIME=anio_prediccion)
total_final_consumo_energia = as.double(predict(regresion_total_cons_energia_ajustado, datos_prediccion_total_cons_energia))
total_final_consumo_energia
total_fin_cons = c(sustainable_energy_db$TOTAL.FINAL.ENERGY.CONSUM,total_final_consumo_energia)
df <- data.frame(anios= anios,total_fin_cons=total_fin_cons)
ggplot(df,aes(x=anios,y=total_fin_cons)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Total Final de Consumo de Energía")
# ---------------------------- Modelo de Predicción para el Nivel de Intensidad de Energia Primaria por año en Argentina (GWh) ---------------------------------------------------------
separador("Modelo de Predicción para el Nivel de Intensidad de Energia Primaria por año en Argentina (GWh)")
regresion_intensidad_energ_prim <- lm(PRIMARY.ENERGY.INTENSITY ~ TIME + TOTAL.FINAL.ENERGY.CONSUM +  REN.ELECTRICITY.OUTPUT +  TOTAL.ELECTRICITY.OUTPUT +
RE.CONSUMPTION , data=sustainable_energy_db)
summary(regresion_intensidad_energ_prim)
regresion_intensidad_energ_prim_ajustado <- lm(PRIMARY.ENERGY.INTENSITY ~ TIME + REN.ELECTRICITY.OUTPUT +  TOTAL.ELECTRICITY.OUTPUT +
TOTAL.FINAL.ENERGY.CONSUM, data=sustainable_energy_db)
summary(regresion_intensidad_energ_prim_ajustado)
datos_prediccion_intensidad_energ_prim_ajustado <- data.frame(TIME=anio_prediccion,TOTAL.FINAL.ENERGY.CONSUM=total_final_consumo_energia,
REN.ELECTRICITY.OUTPUT=salida_electricidad_renovable,TOTAL.ELECTRICITY.OUTPUT=salida_total_electricidad)
nivel_intensidad_ener_primaria = as.double(predict(regresion_intensidad_energ_prim_ajustado, datos_prediccion_intensidad_energ_prim_ajustado))
nivel_intensidad_ener_primaria
intens_energ = c(sustainable_energy_db$PRIMARY.ENERGY.INTENSITY,nivel_intensidad_ener_primaria)
df <- data.frame(anios= anios,intens_energ=intens_energ)
ggplot(df,aes(x=anios,y=total_fin_cons)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Nivel de Intensidad de Consumo de Energía")
matriz_resultado <- matrix(c(nivel_intensidad_ener_primaria,salida_electricidad_renovable,cons_energia_renovable,salida_total_electricidad,total_final_consumo_energia),nrow=1,ncol=5)
colnames(matriz_resultado) <- c("Niv. de Intens. de Energía Primaria (GWh)|","Salida de Elect. Renovable (GWh) |",
"Cons. de Energía Renovable (TJ)|","Salida Tot. de Elect. (GWh)|","Tot. Final de Cons. de Energía (TJ)|")
rownames(matriz_resultado) <- paste("Año",anio_prediccion)
matriz_resultado
intens_energ = c(sustainable_energy_db$PRIMARY.ENERGY.INTENSITY,nivel_intensidad_ener_primaria)
df <- data.frame(anios= anios,intens_energ=intens_energ)
ggplot(df,aes(x=anios,y=intens_energ)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Nivel de Intensidad de Consumo de Energía")
source("~/ITEC/Matematica Aplicada/efi/BUCCIARELLI-EFI-Sustainable_Energy_Argentina.R", echo=TRUE)
sustainable_energy_db <- read.csv("sustainable_energy_argentina.csv")
summary_db <- summary(sustainable_energy_db)
separador <- function(arg) {
cat(paste("-------",arg,"-------\n"))
cat("\n")
}
anio_prediccion = 2030  # Modificar este valor para obtener distintos resultados.
# ----------------------------Modelo de Predicción para la Salida de Electricidad Renovable por año en Argentina (GWh)------------------
separador("Modelo de Predicción para la Salida de Electricidad Renovable por año en Argentina (GWh)")
regresion_salida_elec_renovable <- lm( REN.ELECTRICITY.OUTPUT ~ TIME  + TOTAL.ELECTRICITY.OUTPUT +  PRIMARY.ENERGY.INTENSITY +
+ RE.CONSUMPTION  + TOTAL.FINAL.ENERGY.CONSUM, data=sustainable_energy_db)
summary(regresion_salida_elec_renovable)
regresion_salida_elec_renovable_ajustado <- lm( REN.ELECTRICITY.OUTPUT ~ TIME
, data=sustainable_energy_db)
summary(regresion_salida_elec_renovable_ajustado)
datos_prediccion_salida_elec_renovable_ajustado <- data.frame(TIME=anio_prediccion)
salida_electricidad_renovable = as.double(predict(regresion_salida_elec_renovable_ajustado, datos_prediccion_salida_elec_renovable_ajustado))
salida_electricidad_renovable
anios = c(sustainable_energy_db$TIME,anio_prediccion)
elec_renov = c(sustainable_energy_db$REN.ELECTRICITY.OUTPUT,salida_electricidad_renovable)
df <- data.frame(anios= anios,elec_renov=elec_renov)
ggplot(df,aes(x=anios,y=elec_renov)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable")
# ---------------------------- Modelo de Predicción para el Consumo de Energia Renovable por año en Argentina (Terajoule-TJ)----------------------------------
separador("Modelo de Predicción para el Consumo de Energia Renovable por año en Argentina (Terajoule-TJ)")
regresion_consumo_ER_energy <- lm( RE.CONSUMPTION ~ TIME  + TOTAL.ELECTRICITY.OUTPUT +  PRIMARY.ENERGY.INTENSITY +
+ REN.ELECTRICITY.OUTPUT  + TOTAL.FINAL.ENERGY.CONSUM, data=sustainable_energy_db)
summary(regresion_consumo_ER_energy)
regresion_consumo_ER_ajustado <- lm( RE.CONSUMPTION ~ REN.ELECTRICITY.OUTPUT + TIME, data=sustainable_energy_db)
summary(regresion_consumo_ER_ajustado)
datos_prediccion_consumo_ER <- data.frame(TIME=anio_prediccion,REN.ELECTRICITY.OUTPUT=salida_electricidad_renovable)
cons_energia_renovable = as.double(predict(regresion_consumo_ER_ajustado, datos_prediccion_consumo_ER))
cons_energia_renovable
re_consum = c(sustainable_energy_db$RE.CONSUMPTION,cons_energia_renovable)
df <- data.frame(anios= anios,re_consum=re_consum)
ggplot(df,aes(x=anios,y=re_consum)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Consumo de Energía Renovable")
# ---------------------------- Modelo de Predicción para la Salida Total de Electricidad por año en Argentina (GWh) ------------------------------------------------
separador("Modelo de Predicción para la Salida Total de Electricidad por año en Argentina (GWh)")
regresion_salida_elec_total<- lm(TOTAL.ELECTRICITY.OUTPUT ~ TIME  + REN.ELECTRICITY.OUTPUT +  PRIMARY.ENERGY.INTENSITY +
RE.CONSUMPTION +  + TOTAL.FINAL.ENERGY.CONSUM, data=sustainable_energy_db)
summary(regresion_salida_elec_total)
regresion_salida_elec_total_ajustado <- lm(TOTAL.ELECTRICITY.OUTPUT ~ TIME + RE.CONSUMPTION, data=sustainable_energy_db)
summary(regresion_salida_elec_total_ajustado)
datos_prediccion_salida_elec_total <- data.frame(TIME=anio_prediccion,RE.CONSUMPTION=cons_energia_renovable)
salida_total_electricidad = as.double(predict(regresion_salida_elec_total_ajustado, datos_prediccion_salida_elec_total))
salida_total_electricidad
total_elec = c(sustainable_energy_db$TOTAL.ELECTRICITY.OUTPUT,salida_total_electricidad)
df <- data.frame(anios= anios,total_elec=total_elec)
ggplot(df,aes(x=anios,y=total_elec)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida Total de Electricidad")
# ---------------------------- Modelo de Predicción para el Total Final de Consumo de Energia por año en Argentina (Terajoules - TJ) ------------------------------------------------------
separador("Modelo de Predicción para el Total Final de Consumo de Energia por año en Argentina (Terajoules - TJ)")
regresion_total_cons_energia <- lm(TOTAL.FINAL.ENERGY.CONSUM ~ TIME + PRIMARY.ENERGY.INTENSITY +  REN.ELECTRICITY.OUTPUT +  TOTAL.ELECTRICITY.OUTPUT +
RE.CONSUMPTION , data=sustainable_energy_db)
summary(regresion_total_cons_energia)
regresion_total_cons_energia_ajustado <- lm(TOTAL.FINAL.ENERGY.CONSUM ~ TIME, data=sustainable_energy_db)
summary(regresion_total_cons_energia_ajustado)
datos_prediccion_total_cons_energia <- data.frame(TIME=anio_prediccion)
total_final_consumo_energia = as.double(predict(regresion_total_cons_energia_ajustado, datos_prediccion_total_cons_energia))
total_final_consumo_energia
total_fin_cons = c(sustainable_energy_db$TOTAL.FINAL.ENERGY.CONSUM,total_final_consumo_energia)
df <- data.frame(anios= anios,total_fin_cons=total_fin_cons)
ggplot(df,aes(x=anios,y=total_fin_cons)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Total Final de Consumo de Energía")
# ---------------------------- Modelo de Predicción para el Nivel de Intensidad de Energia Primaria por año en Argentina (GWh) ---------------------------------------------------------
separador("Modelo de Predicción para el Nivel de Intensidad de Energia Primaria por año en Argentina (GWh)")
regresion_intensidad_energ_prim <- lm(PRIMARY.ENERGY.INTENSITY ~ TIME + TOTAL.FINAL.ENERGY.CONSUM +  REN.ELECTRICITY.OUTPUT +  TOTAL.ELECTRICITY.OUTPUT +
RE.CONSUMPTION , data=sustainable_energy_db)
summary(regresion_intensidad_energ_prim)
regresion_intensidad_energ_prim_ajustado <- lm(PRIMARY.ENERGY.INTENSITY ~ TIME + REN.ELECTRICITY.OUTPUT +  TOTAL.ELECTRICITY.OUTPUT +
TOTAL.FINAL.ENERGY.CONSUM, data=sustainable_energy_db)
summary(regresion_intensidad_energ_prim_ajustado)
datos_prediccion_intensidad_energ_prim_ajustado <- data.frame(TIME=anio_prediccion,TOTAL.FINAL.ENERGY.CONSUM=total_final_consumo_energia,
REN.ELECTRICITY.OUTPUT=salida_electricidad_renovable,TOTAL.ELECTRICITY.OUTPUT=salida_total_electricidad)
nivel_intensidad_ener_primaria = as.double(predict(regresion_intensidad_energ_prim_ajustado, datos_prediccion_intensidad_energ_prim_ajustado))
nivel_intensidad_ener_primaria
intens_energ = c(sustainable_energy_db$PRIMARY.ENERGY.INTENSITY,nivel_intensidad_ener_primaria)
df <- data.frame(anios= anios,intens_energ=intens_energ)
ggplot(df,aes(x=anios,y=intens_energ)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Nivel de Intensidad de Consumo de Energía")
matriz_resultado <- matrix(c(nivel_intensidad_ener_primaria,salida_electricidad_renovable,cons_energia_renovable,salida_total_electricidad,total_final_consumo_energia),nrow=1,ncol=5)
colnames(matriz_resultado) <- c("Niv. de Intens. de Energía Primaria (GWh)|","Salida de Elect. Renovable (GWh) |",
"Cons. de Energía Renovable (TJ)|","Salida Tot. de Elect. (GWh)|","Tot. Final de Cons. de Energía (TJ)|")
rownames(matriz_resultado) <- paste("Año",anio_prediccion)
matriz_resultado
ggplot(df,aes(x=anios,y=elec_renov)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable") +
scale_x_continuous(limits = c(0, 50), breaks = seq(0, 50, by = 6)) +
# ---------------------------- Modelo de Predicción para el Consumo de Energia Renovable por año en Argentina (Terajoule-TJ)----------------------------------
separador("Modelo de Predicción para el Consumo de Energia Renovable por año en Argentina (Terajoule-TJ)")
ggplot(df,aes(x=anios,y=elec_renov)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable") +
scale_x_continuous(limits = c(1990, 2030), breaks = seq(0, 50, by = 1)) +
# ---------------------------- Modelo de Predicción para el Consumo de Energia Renovable por año en Argentina (Terajoule-TJ)----------------------------------
separador("Modelo de Predicción para el Consumo de Energia Renovable por año en Argentina (Terajoule-TJ)")
ggplot(df,aes(x=anios,y=elec_renov)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable") +
scale_x_continuous(limits = c(1990, 2030), breaks = seq(1990, 2030, by = 1)) +
# ---------------------------- Modelo de Predicción para el Consumo de Energia Renovable por año en Argentina (Terajoule-TJ)----------------------------------
separador("Modelo de Predicción para el Consumo de Energia Renovable por año en Argentina (Terajoule-TJ)")
ggplot(df,aes(x=anios,y=elec_renov)) +
geom_point(na.rm = FALSE, stat = "identity") +
geom_line(na.rm = FALSE, stat = "identity") +
xlab("Año") +
ylab("Salida de electricidad renovable") +
scale_x_continuous(limits = c(1990, 2030), breaks = seq(1990, 2030, by = 5)) +
# ---------------------------- Modelo de Predicción para el Consumo de Energia Renovable por año en Argentina (Terajoule-TJ)----------------------------------
separador("Modelo de Predicción para el Consumo de Energia Renovable por año en Argentina (Terajoule-TJ)")
source("~/ITEC/Matematica Aplicada/efi/BUCCIARELLI-EFI-Sustainable_Energy_Argentina.R", echo=TRUE)
